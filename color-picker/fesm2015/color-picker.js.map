{"version":3,"file":"color-picker.js.map","sources":["ng://color-picker/util/formats.ts","ng://color-picker/lib/color-picker.service.ts","ng://color-picker/util/contrast.ts","ng://color-picker/util/helpers.ts","ng://color-picker/util/types.ts","ng://color-picker/lib/color-picker/color-picker.component.ts","ng://color-picker/lib/color-picker.directive.ts","ng://color-picker/lib/slider.directive.ts","ng://color-picker/lib/text.directive.ts","ng://color-picker/lib/color-picker.module.ts"],"sourcesContent":["export enum ColorFormats {\r\n    HEX,\r\n    RGBA,\r\n    HSLA\r\n}\r\n\r\nexport class Cmyk {\r\n    constructor(public c: number, public m: number, public y: number, public k: number) { }\r\n}\r\n\r\nexport class Hsla {\r\n    constructor(public h: number, public s: number, public l: number, public a: number) { }\r\n}\r\n\r\nexport class Hsva {\r\n    constructor(public h: number, public s: number, public v: number, public a: number) { }\r\n}\r\n\r\nexport class Rgba {\r\n    constructor(public r: number, public g: number, public b: number, public a: number) { }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { Cmyk, Hsla, Hsva, Rgba } from '../util/formats'\r\nimport { ColorPickerComponent } from './color-picker/color-picker.component'\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ColorPickerService {\r\n    private active: ColorPickerComponent | null = null\r\n\r\n    constructor() { }\r\n\r\n    public setActive(active: ColorPickerComponent | null): void {\r\n        if (this.active && this.active !== active && this.active.cpDialogDisplay !== 'inline') {\r\n            this.active.closeDialog()\r\n        }\r\n\r\n        this.active = active\r\n    }\r\n\r\n    public hsva2hsla(hsva: Hsva): Hsla {\r\n        const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a\r\n\r\n        if (v === 0) {\r\n            return new Hsla(h, 0, 0, a)\r\n        } else if (s === 0 && v === 1) {\r\n            return new Hsla(h, 1, 1, a)\r\n        } else {\r\n            const l = v * (2 - s) / 2\r\n\r\n            return new Hsla(h, v * s / (1 - Math.abs(2 * l - 1)), l, a)\r\n        }\r\n    }\r\n\r\n    public hsla2hsva(hsla: Hsla): Hsva {\r\n        const h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1)\r\n        const l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1)\r\n\r\n        if (l === 0) {\r\n            return new Hsva(h, 0, 0, a)\r\n        } else {\r\n            const v = l + s * (1 - Math.abs(2 * l - 1)) / 2\r\n\r\n            return new Hsva(h, 2 * (v - l) / v, v, a)\r\n        }\r\n    }\r\n\r\n    public hsvaToRgba(hsva: Hsva): Rgba {\r\n        let r: number, g: number, b: number\r\n\r\n        const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a\r\n\r\n        const i = Math.floor(h * 6)\r\n        const f = h * 6 - i\r\n        const p = v * (1 - s)\r\n        const q = v * (1 - f * s)\r\n        const t = v * (1 - (1 - f) * s)\r\n\r\n        switch (i % 6) {\r\n            case 0:\r\n                r = v, g = t, b = p\r\n                break\r\n            case 1:\r\n                r = q, g = v, b = p\r\n                break\r\n            case 2:\r\n                r = p, g = v, b = t\r\n                break\r\n            case 3:\r\n                r = p, g = q, b = v\r\n                break\r\n            case 4:\r\n                r = t, g = p, b = v\r\n                break\r\n            case 5:\r\n                r = v, g = p, b = q\r\n                break\r\n            default:\r\n                r = 0, g = 0, b = 0\r\n        }\r\n\r\n        return new Rgba(r, g, b, a)\r\n    }\r\n\r\n    public rgbaToCmyk(rgba: Rgba): Cmyk {\r\n        const k: number = 1 - Math.max(rgba.r, rgba.g, rgba.b)\r\n\r\n        if (k === 1) {\r\n            return new Cmyk(0, 0, 0, 1)\r\n        } else {\r\n            const c = (1 - rgba.r - k) / (1 - k)\r\n            const m = (1 - rgba.g - k) / (1 - k)\r\n            const y = (1 - rgba.b - k) / (1 - k)\r\n\r\n            return new Cmyk(c, m, y, k)\r\n        }\r\n    }\r\n\r\n    public rgbaToHsva(rgba: Rgba): Hsva {\r\n        let h: number, s: number\r\n\r\n        const r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1)\r\n        const b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1)\r\n\r\n        const max = Math.max(r, g, b), min = Math.min(r, g, b)\r\n\r\n        const v: number = max, d = max - min\r\n\r\n        s = (max === 0) ? 0 : d / max\r\n\r\n        if (max === min) {\r\n            h = 0\r\n        } else {\r\n            switch (max) {\r\n                case r:\r\n                    h = (g - b) / d + (g < b ? 6 : 0)\r\n                    break\r\n                case g:\r\n                    h = (b - r) / d + 2\r\n                    break\r\n                case b:\r\n                    h = (r - g) / d + 4\r\n                    break\r\n                default:\r\n                    h = 0\r\n            }\r\n\r\n            h /= 6\r\n        }\r\n\r\n        return new Hsva(h, s, v, a)\r\n    }\r\n\r\n    public rgbaToHex(rgba: Rgba, allowHex8?: boolean): string {\r\n        /* tslint:disable:no-bitwise */\r\n        let hex = '#' + ((1 << 24) | (rgba.r << 16) | (rgba.g << 8) | rgba.b).toString(16).substr(1)\r\n\r\n        if (allowHex8) {\r\n            hex += ((1 << 8) | Math.round(rgba.a * 255)).toString(16).substr(1)\r\n        }\r\n        /* tslint:enable:no-bitwise */\r\n\r\n        return hex\r\n    }\r\n\r\n    public denormalizeRGBA(rgba: Rgba): Rgba {\r\n        return new Rgba(Math.round(rgba.r * 255), Math.round(rgba.g * 255), Math.round(rgba.b * 255), rgba.a)\r\n    }\r\n\r\n    public stringToHsva(colorString: string = '', allowHex8: boolean = false): Hsva | null {\r\n        let hsva: Hsva | null = null\r\n\r\n        colorString = (colorString || '').toLowerCase()\r\n\r\n        const stringParsers = [\r\n            {\r\n                re: /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\r\n                parse: function (execResult: any) {\r\n                    return new Rgba(parseInt(execResult[2], 10) / 255,\r\n                        parseInt(execResult[3], 10) / 255,\r\n                        parseInt(execResult[4], 10) / 255,\r\n                        isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]))\r\n                }\r\n            }, {\r\n                re: /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\r\n                parse: function (execResult: any) {\r\n                    return new Hsla(parseInt(execResult[2], 10) / 360,\r\n                        parseInt(execResult[3], 10) / 100,\r\n                        parseInt(execResult[4], 10) / 100,\r\n                        isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]))\r\n                }\r\n            }\r\n        ]\r\n\r\n        if (allowHex8) {\r\n            stringParsers.push({\r\n                re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})?$/,\r\n                parse: function (execResult: any) {\r\n                    return new Rgba(parseInt(execResult[1], 16) / 255,\r\n                        parseInt(execResult[2], 16) / 255,\r\n                        parseInt(execResult[3], 16) / 255,\r\n                        parseInt(execResult[4] || 'FF', 16) / 255)\r\n                }\r\n            })\r\n        } else {\r\n            stringParsers.push({\r\n                re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\r\n                parse: function (execResult: any) {\r\n                    return new Rgba(parseInt(execResult[1], 16) / 255,\r\n                        parseInt(execResult[2], 16) / 255,\r\n                        parseInt(execResult[3], 16) / 255,\r\n                        1)\r\n                }\r\n            })\r\n        }\r\n\r\n        stringParsers.push({\r\n            re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\r\n            parse: function (execResult: any) {\r\n                return new Rgba(parseInt(execResult[1] + execResult[1], 16) / 255,\r\n                    parseInt(execResult[2] + execResult[2], 16) / 255,\r\n                    parseInt(execResult[3] + execResult[3], 16) / 255,\r\n                    1)\r\n            }\r\n        })\r\n\r\n        for (const key in stringParsers) {\r\n            if (stringParsers.hasOwnProperty(key)) {\r\n                const parser = stringParsers[key]\r\n\r\n                const match = parser.re.exec(colorString), color: any = match && parser.parse(match)\r\n\r\n                if (color) {\r\n                    if (color instanceof Rgba) {\r\n                        hsva = this.rgbaToHsva(color)\r\n                    } else if (color instanceof Hsla) {\r\n                        hsva = this.hsla2hsva(color)\r\n                    }\r\n\r\n                    return hsva\r\n                }\r\n            }\r\n        }\r\n\r\n        return hsva\r\n    }\r\n\r\n    public outputFormat(hsva: Hsva, outputFormat: string, alphaChannel: string | null): string {\r\n        if (outputFormat === 'auto') {\r\n            outputFormat = hsva.a < 1 ? 'rgba' : 'hex'\r\n        }\r\n\r\n        switch (outputFormat) {\r\n            case 'hsla':\r\n                const hsla = this.hsva2hsla(hsva)\r\n\r\n                const hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100),\r\n                    Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100)\r\n\r\n                if (hsva.a < 1 || alphaChannel === 'always') {\r\n                    return 'hsla(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%,' +\r\n                        hslaText.a + ')'\r\n                } else {\r\n                    return 'hsl(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%)'\r\n                }\r\n\r\n            case 'rgba':\r\n                const rgba = this.denormalizeRGBA(this.hsvaToRgba(hsva))\r\n\r\n                if (hsva.a < 1 || alphaChannel === 'always') {\r\n                    return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' +\r\n                        Math.round(rgba.a * 100) / 100 + ')'\r\n                } else {\r\n                    return 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')'\r\n                }\r\n\r\n            default:\r\n                const allowHex8 = (alphaChannel === 'always' || alphaChannel === 'forced')\r\n\r\n                return this.rgbaToHex(this.denormalizeRGBA(this.hsvaToRgba(hsva)), allowHex8)\r\n        }\r\n    }\r\n}\r\n","import { Rgba } from './formats'\r\n\r\nexport function calculateContrast(foreground: Rgba, background: Rgba) {\r\n\r\n    if (Math.round(foreground.a * 100) < 100)\r\n        foreground = compositeColors(foreground, background)\r\n\r\n    const luminance1 = calculateLuminance(foreground) + 0.05\r\n    const luminance2 = calculateLuminance(background) + 0.05\r\n\r\n    return Math.max(luminance1, luminance2) / Math.min(luminance1, luminance2)\r\n}\r\n\r\nexport function compositeColors(foreground: Rgba, background: Rgba) {\r\n    const a = compositeAlpha(foreground.a, background.a)\r\n\r\n    const r = compositeComponent(foreground.r, foreground.a, background.r, background.a, a)\r\n    const g = compositeComponent(foreground.g, foreground.a, background.g, background.a, a)\r\n    const b = compositeComponent(foreground.b, foreground.a, background.b, background.a, a)\r\n\r\n    return new Rgba(r, g, b, a)\r\n}\r\n\r\nexport function compositeAlpha(foregroundAlpha: number, backgroundAlpha: number) {\r\n    return 1 - (1 - backgroundAlpha) * (1 - foregroundAlpha)\r\n}\r\n\r\nexport function compositeComponent(fgC: number, fgA: number, bgC: number, bgA: number, a: number) {\r\n    if (a == 0) return 0\r\n    return ((fgC * fgA) + (bgC * bgA * (1 - fgA))) / a\r\n}\r\n\r\nexport function calculateLuminance(color: Rgba) {\r\n    let red = color.r / 255\r\n    red = red < 0.03928 ? red / 12.92 : Math.pow((red + 0.055) / 1.055, 2.4)\r\n\r\n    let green = color.g / 255\r\n    green = green < 0.03928 ? green / 12.92 : Math.pow((green + 0.055) / 1.055, 2.4)\r\n\r\n    let blue = color.b / 255\r\n    blue = blue < 0.03928 ? blue / 12.92 : Math.pow((blue + 0.055) / 1.055, 2.4)\r\n\r\n    return (0.2126 * red) + (0.7152 * green) + (0.0722 * blue)\r\n}\r\n\r\nexport function calculateMinimumAlpha(foreground: Rgba, background: Rgba, minContrastRatio: number) {\r\n    if (Math.round(background.a * 100) < 100)\r\n        return -1\r\n\r\n    let testForeground = new Rgba(foreground.r, foreground.g, foreground.b, 1)\r\n    let testRatio = calculateContrast(testForeground, background)\r\n    if (testRatio < minContrastRatio)\r\n        return -1\r\n\r\n    let numIterations = 0\r\n    let minAlpha = 0\r\n    let maxAlpha = 1\r\n\r\n    while (numIterations <= 10 && (maxAlpha - minAlpha) > 0.01) {\r\n        const testAlpha = (minAlpha + maxAlpha) / 2\r\n\r\n        testForeground = new Rgba(foreground.r, foreground.g, foreground.b, testAlpha)\r\n        testRatio = calculateContrast(testForeground, background)\r\n\r\n        if (testRatio < minContrastRatio)\r\n            minAlpha = testAlpha\r\n        else\r\n            maxAlpha = testAlpha\r\n\r\n        numIterations++\r\n    }\r\n\r\n    return maxAlpha\r\n}\r\n\r\nconst white = new Rgba(218, 218, 218, 1)\r\nconst black = new Rgba(34, 34, 34, 1)\r\n\r\nexport function opaqueSliderWhite(background: Rgba) {\r\n    const cWhite = calculateContrast(white, new Rgba(background.r, background.g, background.b, 1))\r\n    const cBlack = calculateContrast(black, new Rgba(background.r, background.g, background.b, 1))\r\n\r\n    return cWhite > cBlack\r\n}\r\n\r\nexport function transparentSliderWhite(background: Rgba) {\r\n    const bg = compositeColors(background, white)\r\n    const cWhite = calculateContrast(white, new Rgba(bg.r, bg.g, bg.b, 1))\r\n    const cBlack = calculateContrast(black, new Rgba(bg.r, bg.g, bg.b, 1))\r\n\r\n    return cWhite > cBlack\r\n}\r\n","export function detectIE(): boolean | number {\r\n    let ua = ''\r\n\r\n    if (typeof navigator !== 'undefined') {\r\n        ua = navigator.userAgent.toLowerCase()\r\n    }\r\n\r\n    const msie = ua.indexOf('msie ')\r\n\r\n    if (msie > 0) {\r\n        // IE 10 or older => return version number\r\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10)\r\n    }\r\n\r\n    // Other browser\r\n    return false\r\n}\r\n\r\nexport class SliderPosition {\r\n    constructor(public h: number, public s: number, public v: number, public a: number) { }\r\n}\r\n\r\nexport class SliderDimension {\r\n    constructor(public h: number, public s: number, public v: number, public a: number) { }\r\n}\r\n","export enum OutputFormat {\r\n    auto = 'auto',\r\n    hex = 'hex',\r\n    rgba = 'rgba',\r\n    hsla = 'hsla'\r\n}\r\n\r\nexport enum AlphaChannel {\r\n    enabled = 'enabled',\r\n    disabled = 'disabled',\r\n    always = 'always',\r\n    forced = 'forced'\r\n}\r\n\r\nexport enum DialogPosition {\r\n    top = 'top',\r\n    left = 'left',\r\n    right = 'right',\r\n    bottom = 'bottom'\r\n}\r\n\r\nexport enum DialogDisplay {\r\n    popup = 'popup',\r\n    inline = 'inline'\r\n}\r\n\r\nexport enum Position {\r\n    fixed = 'fixed',\r\n    relative = 'relative',\r\n    static = 'static',\r\n    absolute = 'absolute'\r\n}\r\n\r\nexport type ColorMode = 'color' | 'c' | '1' | 'grayscale' | 'g' | '2' | 'presets' | 'p' | '3'\r\n\r\nexport enum ColorModeInternal {\r\n    color,\r\n    grayscale,\r\n    presets\r\n}\r\n\r\nexport function parseColorMode(mode: string): ColorModeInternal {\r\n    switch (mode.toString().toUpperCase()) {\r\n        case '1':\r\n        case 'C':\r\n        case 'COLOR':\r\n            return ColorModeInternal.color\r\n\r\n        case '2':\r\n        case 'G':\r\n        case 'GRAYSCALE':\r\n            return ColorModeInternal.grayscale\r\n\r\n        case '3':\r\n        case 'P':\r\n        case 'PRESETS':\r\n            return ColorModeInternal.presets\r\n\r\n        default:\r\n            return ColorModeInternal.color\r\n    }\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core'\r\nimport { opaqueSliderWhite, transparentSliderWhite } from '../../util/contrast'\r\nimport { ColorFormats, Hsla, Hsva, Rgba } from '../../util/formats'\r\nimport { detectIE, SliderPosition } from '../../util/helpers'\r\nimport { AlphaChannel, ColorMode, ColorModeInternal, DialogDisplay, DialogPosition, OutputFormat, parseColorMode, Position } from '../../util/types'\r\nimport { ColorPickerService } from '../color-picker.service'\r\n\r\n@Component({\r\n    selector: 'cp-color-picker',\r\n    templateUrl: './color-picker.component.html',\r\n    styleUrls: ['./color-picker.component.scss'],\r\n    encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class ColorPickerComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    readonly alphaChannel = AlphaChannel\r\n    readonly colorModeInternal = ColorModeInternal\r\n    readonly dialogDisplay = DialogDisplay\r\n\r\n    private isIE10: boolean = false\r\n\r\n    private hsva: Hsva\r\n\r\n    private width: number\r\n    private height: number\r\n\r\n    private outputColor: string\r\n    private initialColor: string\r\n    private fallbackColor: string\r\n\r\n    private listenerResize: any\r\n    private listenerMouseDown: any\r\n\r\n    private directiveInstance: any\r\n\r\n    private sliderH: number\r\n    private directiveElementRef: ElementRef\r\n\r\n    private dialogArrowSize: number = 10\r\n    private dialogArrowOffset: number = 15\r\n\r\n    private dialogInputFields: ColorFormats[] = [\r\n        ColorFormats.HEX,\r\n        ColorFormats.RGBA,\r\n        ColorFormats.HSLA\r\n    ]\r\n\r\n    private useRootViewContainer: boolean = false\r\n\r\n    public show: boolean\r\n    public hidden: boolean\r\n\r\n    public top: number\r\n    public left: number\r\n    public position: Position = Position.relative\r\n\r\n    public format: ColorFormats\r\n    public slider: SliderPosition\r\n\r\n    public hexText: string\r\n    public hexAlpha: number\r\n\r\n    public hslaText: Hsla\r\n    public rgbaText: Rgba\r\n\r\n    public arrowTop: number\r\n\r\n    public selectedColor: string\r\n    public hueSliderColor: string\r\n    public alphaSliderColor: string\r\n\r\n    public svSliderWhite: boolean\r\n    public hueSliderWhite: boolean\r\n    public valueSliderWhite: boolean\r\n    public alphaSliderWhite: boolean\r\n\r\n    public cpWidth: number\r\n    public cpHeight: number\r\n\r\n    public cpColorMode: ColorModeInternal = ColorModeInternal.color\r\n\r\n    public cpAlphaChannel: AlphaChannel\r\n    public cpOutputFormat: OutputFormat\r\n\r\n    public cpDisableInput: boolean\r\n    public cpDialogDisplay: DialogDisplay\r\n\r\n    public cpIgnoredElements: any\r\n\r\n    public cpSaveClickOutside: boolean\r\n    public cpCloseClickOutside: boolean\r\n\r\n    public cpPosition: DialogPosition = DialogPosition.right\r\n    public cpPositionOffset: number\r\n\r\n    public cpOKButton: boolean\r\n    public cpOKButtonText: string\r\n    public cpOKButtonClass: string\r\n\r\n    public cpCancelButton: boolean\r\n    public cpCancelButtonText: string\r\n    public cpCancelButtonClass: string\r\n\r\n    public cpPresetLabel: string\r\n    public cpPresetColors: string[]\r\n    public cpMaxPresetColorsLength: number\r\n\r\n    public cpPresetEmptyMessage: string\r\n    public cpPresetEmptyMessageClass: string\r\n\r\n    public cpAddColorButton: boolean\r\n    public cpAddColorButtonText: string\r\n    public cpRemoveColorButtonClass: string\r\n\r\n    @ViewChild('dialogPopup') private dialogElement: ElementRef\r\n\r\n    @HostListener('document:keyup.esc', ['$event']) handleEsc(event: any): void {\r\n        if (this.show && this.cpDialogDisplay == DialogDisplay.popup) {\r\n            this.onCancelColor(event)\r\n        }\r\n    }\r\n\r\n    @HostListener('document:keyup.enter', ['$event']) handleEnter(event: any): void {\r\n        if (this.show && this.cpDialogDisplay == DialogDisplay.popup) {\r\n            this.onAcceptColor(event)\r\n        }\r\n    }\r\n\r\n    constructor(\r\n        private elRef: ElementRef,\r\n        private cdRef: ChangeDetectorRef,\r\n        private service: ColorPickerService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.slider = new SliderPosition(0, 0, 0, 0)\r\n\r\n        if (this.cpOutputFormat == OutputFormat.rgba) {\r\n            this.format = ColorFormats.RGBA\r\n        } else if (this.cpOutputFormat == OutputFormat.hsla) {\r\n            this.format = ColorFormats.HSLA\r\n        } else {\r\n            this.format = ColorFormats.HEX\r\n        }\r\n\r\n        this.listenerMouseDown = (event: any) => { this.onMouseDown(event) }\r\n        this.listenerResize = () => { this.onResize() }\r\n\r\n        this.openDialog(this.initialColor, false)\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.closeDialog()\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        if (this.cpWidth !== 230 || this.cpDialogDisplay == DialogDisplay.inline) {\r\n\r\n            this.updateColorPicker(false)\r\n\r\n            this.cdRef.detectChanges()\r\n        }\r\n    }\r\n\r\n    public openDialog(color: any, emit: boolean = true): void {\r\n        this.service.setActive(this)\r\n\r\n        if (!this.width) {\r\n            this.cpWidth = this.directiveElementRef.nativeElement.offsetWidth\r\n        }\r\n\r\n        if (!this.height) {\r\n            this.height = 320\r\n        }\r\n\r\n        this.setInitialColor(color)\r\n\r\n        this.setColorFromString(color, emit)\r\n\r\n        this.openColorPicker()\r\n    }\r\n\r\n    public closeDialog(): void {\r\n        this.closeColorPicker()\r\n    }\r\n\r\n    public setupDialog(instance: any, elementRef: ElementRef, color: any,\r\n        cpWidth: string, cpHeight: string, cpDialogDisplay: DialogDisplay, cpFallbackColor: string,\r\n        cpColorMode: ColorMode, cpAlphaChannel: AlphaChannel, cpOutputFormat: OutputFormat,\r\n        cpDisableInput: boolean, cpIgnoredElements: any, cpSaveClickOutside: boolean,\r\n        cpCloseClickOutside: boolean, cpUseRootViewContainer: boolean, cpPosition: DialogPosition,\r\n        cpPositionOffset: string, cpPositionRelativeToArrow: boolean, cpPresetLabel: string,\r\n        cpPresetColors: string[], cpMaxPresetColorsLength: number, cpPresetEmptyMessage: string,\r\n        cpPresetEmptyMessageClass: string, cpOKButton: boolean, cpOKButtonClass: string,\r\n        cpOKButtonText: string, cpCancelButton: boolean, cpCancelButtonClass: string,\r\n        cpCancelButtonText: string, cpAddColorButton: boolean,\r\n        cpAddColorButtonText: string, cpRemoveColorButtonClass: string): void {\r\n        this.setInitialColor(color)\r\n\r\n        this.cpColorMode = parseColorMode(cpColorMode)\r\n\r\n        this.isIE10 = (detectIE() === 10)\r\n\r\n        this.directiveInstance = instance\r\n        this.directiveElementRef = elementRef\r\n\r\n        this.cpDisableInput = cpDisableInput\r\n\r\n        this.cpAlphaChannel = cpAlphaChannel\r\n        this.cpOutputFormat = cpOutputFormat\r\n        this.cpDialogDisplay = cpDialogDisplay\r\n\r\n        this.cpIgnoredElements = cpIgnoredElements\r\n\r\n        this.cpSaveClickOutside = cpSaveClickOutside\r\n        this.cpCloseClickOutside = cpCloseClickOutside\r\n\r\n        this.useRootViewContainer = cpUseRootViewContainer\r\n\r\n        this.width = this.cpWidth = parseInt(cpWidth, 10)\r\n        this.height = this.cpHeight = parseInt(cpHeight, 10)\r\n\r\n        this.cpPosition = cpPosition\r\n        this.cpPositionOffset = parseInt(cpPositionOffset, 10)\r\n\r\n        this.cpOKButton = cpOKButton\r\n        this.cpOKButtonText = cpOKButtonText\r\n        this.cpOKButtonClass = cpOKButtonClass\r\n\r\n        this.cpCancelButton = cpCancelButton\r\n        this.cpCancelButtonText = cpCancelButtonText\r\n        this.cpCancelButtonClass = cpCancelButtonClass\r\n\r\n        this.fallbackColor = cpFallbackColor || '#fff'\r\n\r\n        this.setPresetConfig(cpPresetLabel, cpPresetColors)\r\n\r\n        this.cpMaxPresetColorsLength = cpMaxPresetColorsLength\r\n        this.cpPresetEmptyMessage = cpPresetEmptyMessage\r\n        this.cpPresetEmptyMessageClass = cpPresetEmptyMessageClass\r\n\r\n        this.cpAddColorButton = cpAddColorButton\r\n        this.cpAddColorButtonText = cpAddColorButtonText\r\n        this.cpRemoveColorButtonClass = cpRemoveColorButtonClass\r\n\r\n        if (!cpPositionRelativeToArrow) {\r\n            this.dialogArrowOffset = 0\r\n        }\r\n\r\n        if (cpDialogDisplay == DialogDisplay.inline) {\r\n            this.dialogArrowSize = 0\r\n            this.dialogArrowOffset = 0\r\n        }\r\n\r\n        if (cpOutputFormat == OutputFormat.hex &&\r\n            cpAlphaChannel != AlphaChannel.always && cpAlphaChannel != AlphaChannel.forced) {\r\n            this.cpAlphaChannel = AlphaChannel.disabled\r\n        }\r\n    }\r\n\r\n    public setInitialColor(color: any): void {\r\n        this.initialColor = color\r\n    }\r\n\r\n    public setPresetConfig(cpPresetLabel: string, cpPresetColors: string[]): void {\r\n        this.cpPresetLabel = cpPresetLabel\r\n        this.cpPresetColors = cpPresetColors\r\n    }\r\n\r\n    public setColorFromString(value: string, emit: boolean = true, update: boolean = true): void {\r\n        let hsva: Hsva | null\r\n\r\n        if (this.cpAlphaChannel == AlphaChannel.always || this.cpAlphaChannel == AlphaChannel.forced) {\r\n            hsva = this.service.stringToHsva(value, true)\r\n\r\n            if (!hsva && !this.hsva) {\r\n                hsva = this.service.stringToHsva(value, false)\r\n            }\r\n        } else {\r\n            hsva = this.service.stringToHsva(value, false)\r\n        }\r\n\r\n        if (!hsva && !this.hsva) {\r\n            hsva = this.service.stringToHsva(this.fallbackColor, false)\r\n        }\r\n\r\n        if (hsva) {\r\n            this.hsva = hsva\r\n\r\n            this.sliderH = this.hsva.h\r\n\r\n            this.updateColorPicker(emit, update)\r\n        }\r\n    }\r\n\r\n    public onResize(): void {\r\n        if (this.position == Position.fixed) {\r\n            this.setDialogPosition()\r\n        } else if (this.cpDialogDisplay != DialogDisplay.inline) {\r\n            this.closeColorPicker()\r\n        }\r\n    }\r\n\r\n    public onDragEnd(slider: string): void {\r\n        this.directiveInstance.sliderDragEnd({ slider: slider, color: this.outputColor })\r\n    }\r\n\r\n    public onDragStart(slider: string): void {\r\n        this.directiveInstance.sliderDragStart({ slider: slider, color: this.outputColor })\r\n    }\r\n\r\n    public onMouseDown(event: MouseEvent): void {\r\n        if (!this.isIE10 && this.cpDialogDisplay == DialogDisplay.popup &&\r\n            event.target !== this.directiveElementRef.nativeElement &&\r\n            !this.isDescendant(this.elRef.nativeElement, event.target) &&\r\n            !this.isDescendant(this.directiveElementRef.nativeElement, event.target) &&\r\n            this.cpIgnoredElements.filter((item: any) => item === event.target).length === 0) {\r\n            if (!this.cpSaveClickOutside) {\r\n                this.setColorFromString(this.initialColor, false)\r\n\r\n                this.directiveInstance.colorChanged(this.initialColor)\r\n            }\r\n\r\n            if (this.cpCloseClickOutside) {\r\n                this.closeColorPicker()\r\n            }\r\n        }\r\n    }\r\n\r\n    public onAcceptColor(event: Event): void {\r\n        event.stopPropagation()\r\n\r\n        if (this.cpDialogDisplay == DialogDisplay.popup) {\r\n            this.closeColorPicker()\r\n        }\r\n\r\n        if (this.outputColor) {\r\n            this.directiveInstance.colorSelected(this.outputColor)\r\n        }\r\n    }\r\n\r\n    public onCancelColor(event: Event): void {\r\n        event.stopPropagation()\r\n\r\n        this.setColorFromString(this.initialColor, true)\r\n\r\n        if (this.cpDialogDisplay == DialogDisplay.popup) {\r\n            this.directiveInstance.colorChanged(this.initialColor, true)\r\n\r\n            this.closeColorPicker()\r\n        }\r\n\r\n        this.directiveInstance.colorCanceled()\r\n    }\r\n\r\n    public onFormatToggle(change: number): void {\r\n        const availableFormats = this.dialogInputFields.length\r\n\r\n        const nextFormat = (((this.dialogInputFields.indexOf(this.format) + change) %\r\n            availableFormats) + availableFormats) % availableFormats\r\n\r\n        this.format = this.dialogInputFields[nextFormat]\r\n    }\r\n\r\n    public onColorChange(value: { s: number, v: number, rgX: number, rgY: number }): void {\r\n        this.hsva.s = value.s / value.rgX\r\n        this.hsva.v = value.v / value.rgY\r\n\r\n        this.updateColorPicker()\r\n\r\n        this.directiveInstance.sliderChanged({\r\n            slider: 'lightness',\r\n            value: this.hsva.v,\r\n            color: this.outputColor\r\n        })\r\n\r\n        this.directiveInstance.sliderChanged({\r\n            slider: 'saturation',\r\n            value: this.hsva.s,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onHueChange(value: { v: number, rgX: number }): void {\r\n        this.hsva.h = value.v / value.rgX\r\n        this.sliderH = this.hsva.h\r\n\r\n        this.updateColorPicker()\r\n\r\n        this.directiveInstance.sliderChanged({\r\n            slider: 'hue',\r\n            value: this.hsva.h,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onValueChange(value: { v: number, rgX: number }): void {\r\n        this.hsva.v = value.v / value.rgX\r\n\r\n        this.updateColorPicker()\r\n\r\n        this.directiveInstance.sliderChanged({\r\n            slider: 'value',\r\n            value: this.hsva.v,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onAlphaChange(value: { v: number, rgX: number }): void {\r\n        this.hsva.a = value.v / value.rgX\r\n\r\n        this.updateColorPicker()\r\n\r\n        this.directiveInstance.sliderChanged({\r\n            slider: 'alpha',\r\n            value: this.hsva.a,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onHexInput(value: string | null): void {\r\n        if (value === null) {\r\n            this.updateColorPicker()\r\n        } else {\r\n            if (value && value[0] !== '#') {\r\n                value = '#' + value\r\n            }\r\n\r\n            let validHex = /^#([a-f0-9]{3}|[a-f0-9]{6})$/gi\r\n\r\n            if (this.cpAlphaChannel == AlphaChannel.always) {\r\n                validHex = /^#([a-f0-9]{3}|[a-f0-9]{6}|[a-f0-9]{8})$/gi\r\n            }\r\n\r\n            const valid = validHex.test(value)\r\n\r\n            if (valid) {\r\n                if (value.length < 5) {\r\n                    value = '#' + value.substring(1)\r\n                        .split('')\r\n                        .map(c => c + c)\r\n                        .join('')\r\n                }\r\n\r\n                if (this.cpAlphaChannel == AlphaChannel.forced) {\r\n                    value += Math.round(this.hsva.a * 255).toString(16)\r\n                }\r\n\r\n                this.setColorFromString(value, true, false)\r\n            }\r\n\r\n            this.directiveInstance.inputChanged({\r\n                input: 'hex',\r\n                valid: valid,\r\n                value: value,\r\n                color: this.outputColor\r\n            })\r\n        }\r\n    }\r\n\r\n    public onRedInput(value: { v: number, rg: number }): void {\r\n        const rgba = this.service.hsvaToRgba(this.hsva)\r\n\r\n        const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg\r\n\r\n        if (valid) {\r\n            rgba.r = value.v / value.rg\r\n\r\n            this.hsva = this.service.rgbaToHsva(rgba)\r\n\r\n            this.sliderH = this.hsva.h\r\n\r\n            this.updateColorPicker()\r\n        }\r\n\r\n        this.directiveInstance.inputChanged({\r\n            input: 'red',\r\n            valid: valid,\r\n            value: rgba.r,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onBlueInput(value: { v: number, rg: number }): void {\r\n        const rgba = this.service.hsvaToRgba(this.hsva)\r\n\r\n        const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg\r\n\r\n        if (valid) {\r\n            rgba.b = value.v / value.rg\r\n\r\n            this.hsva = this.service.rgbaToHsva(rgba)\r\n\r\n            this.sliderH = this.hsva.h\r\n\r\n            this.updateColorPicker()\r\n        }\r\n\r\n        this.directiveInstance.inputChanged({\r\n            input: 'blue',\r\n            valid: valid,\r\n            value: rgba.b,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onGreenInput(value: { v: number, rg: number }): void {\r\n        const rgba = this.service.hsvaToRgba(this.hsva)\r\n\r\n        const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg\r\n\r\n        if (valid) {\r\n            rgba.g = value.v / value.rg\r\n\r\n            this.hsva = this.service.rgbaToHsva(rgba)\r\n\r\n            this.sliderH = this.hsva.h\r\n\r\n            this.updateColorPicker()\r\n        }\r\n\r\n        this.directiveInstance.inputChanged({\r\n            input: 'green',\r\n            valid: valid,\r\n            value: rgba.g,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onHueInput(value: { v: number, rg: number }) {\r\n        const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg\r\n\r\n        if (valid) {\r\n            this.hsva.h = value.v / value.rg\r\n\r\n            this.sliderH = this.hsva.h\r\n\r\n            this.updateColorPicker()\r\n        }\r\n\r\n        this.directiveInstance.inputChanged({\r\n            input: 'hue',\r\n            valid: valid,\r\n            value: this.hsva.h,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onValueInput(value: { v: number, rg: number }): void {\r\n        const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg\r\n\r\n        if (valid) {\r\n            this.hsva.v = value.v / value.rg\r\n\r\n            this.updateColorPicker()\r\n        }\r\n\r\n        this.directiveInstance.inputChanged({\r\n            input: 'value',\r\n            valid: valid,\r\n            value: this.hsva.v,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onAlphaInput(value: { v: number, rg: number }): void {\r\n        const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg\r\n\r\n        if (valid) {\r\n            this.hsva.a = value.v / value.rg\r\n\r\n            this.updateColorPicker()\r\n        }\r\n\r\n        this.directiveInstance.inputChanged({\r\n            input: 'alpha',\r\n            valid: valid,\r\n            value: this.hsva.a,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onLightnessInput(value: { v: number, rg: number }): void {\r\n        const hsla = this.service.hsva2hsla(this.hsva)\r\n\r\n        const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg\r\n\r\n        if (valid) {\r\n            hsla.l = value.v / value.rg\r\n\r\n            this.hsva = this.service.hsla2hsva(hsla)\r\n\r\n            this.sliderH = this.hsva.h\r\n\r\n            this.updateColorPicker()\r\n        }\r\n\r\n        this.directiveInstance.inputChanged({\r\n            input: 'lightness',\r\n            valid: valid,\r\n            value: hsla.l,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onSaturationInput(value: { v: number, rg: number }): void {\r\n        const hsla = this.service.hsva2hsla(this.hsva)\r\n\r\n        const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg\r\n\r\n        if (valid) {\r\n            hsla.s = value.v / value.rg\r\n\r\n            this.hsva = this.service.hsla2hsva(hsla)\r\n\r\n            this.sliderH = this.hsva.h\r\n\r\n            this.updateColorPicker()\r\n        }\r\n\r\n        this.directiveInstance.inputChanged({\r\n            input: 'saturation',\r\n            valid: valid,\r\n            value: hsla.s,\r\n            color: this.outputColor\r\n        })\r\n    }\r\n\r\n    public onAddPresetColor(event: any, value: string): void {\r\n        event.stopPropagation()\r\n\r\n        if (!this.cpPresetColors.filter((color) => (color === value)).length) {\r\n            this.cpPresetColors = this.cpPresetColors.concat(value)\r\n\r\n            this.directiveInstance.presetColorsChanged(this.cpPresetColors)\r\n        }\r\n    }\r\n\r\n    public onRemovePresetColor(event: any, value: string): void {\r\n        event.stopPropagation()\r\n\r\n        this.cpPresetColors = this.cpPresetColors.filter((color) => (color !== value))\r\n\r\n        this.directiveInstance.presetColorsChanged(this.cpPresetColors)\r\n    }\r\n\r\n    // Private helper functions for the color picker dialog status\r\n\r\n    private openColorPicker(): void {\r\n        if (!this.show) {\r\n            this.show = true\r\n            this.hidden = true\r\n\r\n            setTimeout(() => {\r\n                this.hidden = false\r\n\r\n                this.setDialogPosition()\r\n\r\n                this.cdRef.detectChanges()\r\n            }, 0)\r\n\r\n            this.directiveInstance.stateChanged(true)\r\n\r\n            if (!this.isIE10) {\r\n                document.addEventListener('mousedown', this.listenerMouseDown)\r\n            }\r\n\r\n            window.addEventListener('resize', this.listenerResize)\r\n        }\r\n    }\r\n\r\n    private closeColorPicker(): void {\r\n        if (this.show) {\r\n            this.show = false\r\n\r\n            this.directiveInstance.stateChanged(false)\r\n\r\n            if (!this.isIE10) {\r\n                document.removeEventListener('mousedown', this.listenerMouseDown)\r\n            }\r\n\r\n            window.removeEventListener('resize', this.listenerResize)\r\n\r\n            if (!this.cdRef['destroyed']) {\r\n                this.cdRef.detectChanges()\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateColorPicker(emit: boolean = true, update: boolean = true): void {\r\n        if (this.cpColorMode == ColorModeInternal.grayscale) {\r\n            this.hsva.s = 0\r\n        }\r\n\r\n        const lastOutput = this.outputColor\r\n\r\n        const hsla = this.service.hsva2hsla(this.hsva)\r\n        const rgba = this.service.denormalizeRGBA(this.service.hsvaToRgba(this.hsva))\r\n\r\n        const hue = this.service.denormalizeRGBA(this.service.hsvaToRgba(new Hsva(this.sliderH || this.hsva.h, 1, 1, 1)))\r\n\r\n        if (update) {\r\n            this.hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100), Math.round(hsla.l * 100),\r\n                Math.round(hsla.a * 100) / 100)\r\n\r\n            this.rgbaText = new Rgba(rgba.r, rgba.g, rgba.b, Math.round(rgba.a * 100) / 100)\r\n\r\n            const allowHex8 = this.cpAlphaChannel == AlphaChannel.always\r\n\r\n            this.hexText = this.service.rgbaToHex(rgba, allowHex8)\r\n            this.hexAlpha = this.rgbaText.a\r\n        }\r\n\r\n        if (this.cpOutputFormat == OutputFormat.auto) {\r\n            if (this.hsva.a < 1) {\r\n                this.format = this.hsva.a < 1 ? ColorFormats.RGBA : ColorFormats.HEX\r\n            }\r\n        }\r\n\r\n        this.hueSliderColor = 'rgb(' + hue.r + ',' + hue.g + ',' + hue.b + ')'\r\n        this.alphaSliderColor = 'linear-gradient(to right, rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ', 0) 0%, rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ', 1) 100%)'\r\n\r\n        this.svSliderWhite = opaqueSliderWhite(rgba)\r\n        this.hueSliderWhite = opaqueSliderWhite(hue)\r\n        this.valueSliderWhite = opaqueSliderWhite(rgba)\r\n        this.alphaSliderWhite = transparentSliderWhite(rgba)\r\n\r\n        this.outputColor = this.service.outputFormat(this.hsva, this.cpOutputFormat, this.cpAlphaChannel)\r\n        this.selectedColor = this.service.outputFormat(this.hsva, 'rgba', null)\r\n\r\n        this.slider = new SliderPosition(\r\n            (this.sliderH || this.hsva.h),\r\n            this.hsva.s,\r\n            (1 - this.hsva.v),\r\n            this.hsva.a\r\n        )\r\n\r\n        if (emit && lastOutput !== this.outputColor) {\r\n            this.directiveInstance.colorChanged(this.outputColor)\r\n        }\r\n    }\r\n\r\n    // Private helper functions for the color picker dialog positioning\r\n\r\n    private setDialogPosition(): void {\r\n        if (this.cpDialogDisplay == DialogDisplay.inline) {\r\n            this.position = Position.relative\r\n        } else {\r\n            let position = Position.static, transform = '', style\r\n\r\n            let parentNode: any = null, transformNode: any = null\r\n\r\n            let node = this.directiveElementRef.nativeElement.parentNode\r\n\r\n            const dialogHeight = this.dialogElement.nativeElement.offsetHeight\r\n\r\n            while (node !== null && node.tagName !== 'HTML') {\r\n                style = window.getComputedStyle(node)\r\n                position = style.getPropertyValue('position')\r\n                transform = style.getPropertyValue('transform')\r\n\r\n                if (position != Position.static && parentNode === null) {\r\n                    parentNode = node\r\n                }\r\n\r\n                if (transform && transform !== 'none' && transformNode === null) {\r\n                    transformNode = node\r\n                }\r\n\r\n                if (position == Position.fixed) {\r\n                    parentNode = transformNode\r\n\r\n                    break\r\n                }\r\n\r\n                node = node.parentNode\r\n            }\r\n\r\n            const boxDirective = this.createDialogBox(this.directiveElementRef.nativeElement, (position != Position.fixed))\r\n\r\n            if (this.useRootViewContainer || (position == Position.fixed && (!parentNode || parentNode instanceof HTMLUnknownElement))) {\r\n                this.top = boxDirective.top\r\n                this.left = boxDirective.left\r\n            } else {\r\n                if (parentNode === null) {\r\n                    parentNode = node\r\n                }\r\n\r\n                const boxParent = this.createDialogBox(parentNode, (position != Position.fixed))\r\n\r\n                this.top = boxDirective.top - boxParent.top\r\n                this.left = boxDirective.left - boxParent.left\r\n            }\r\n\r\n            if (position == Position.fixed) {\r\n                this.position = Position.fixed\r\n            }\r\n\r\n            if (this.cpPosition == DialogPosition.left) {\r\n                this.top += boxDirective.height * this.cpPositionOffset / 100 - this.dialogArrowOffset\r\n                this.left -= this.cpWidth + this.dialogArrowSize - 2\r\n            } else if (this.cpPosition == DialogPosition.top) {\r\n                this.arrowTop = dialogHeight - 1\r\n                this.top -= dialogHeight + this.dialogArrowSize\r\n                this.left += this.cpPositionOffset / 100 * boxDirective.width - this.dialogArrowOffset\r\n            } else if (this.cpPosition == DialogPosition.bottom) {\r\n                this.top += boxDirective.height + this.dialogArrowSize\r\n                this.left += this.cpPositionOffset / 100 * boxDirective.width - this.dialogArrowOffset\r\n            } else {\r\n                this.top += boxDirective.height * this.cpPositionOffset / 100 - this.dialogArrowOffset\r\n                this.left += boxDirective.width + this.dialogArrowSize - 2\r\n            }\r\n        }\r\n    }\r\n\r\n    // Private helper functions for the color picker dialog positioning and opening\r\n\r\n    private isDescendant(parent: any, child: any): boolean {\r\n        let node: any = child.parentNode\r\n\r\n        while (node !== null) {\r\n            if (node === parent) {\r\n                return true\r\n            }\r\n\r\n            node = node.parentNode\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    private createDialogBox(element: any, offset: boolean): any {\r\n        return {\r\n            top: element.getBoundingClientRect().top + (offset ? window.pageYOffset : 0),\r\n            left: element.getBoundingClientRect().left + (offset ? window.pageXOffset : 0),\r\n            width: element.offsetWidth,\r\n            height: element.offsetHeight\r\n        }\r\n    }\r\n}\r\n","import { ApplicationRef, ComponentFactoryResolver, ComponentRef, Directive, ElementRef, EventEmitter, HostListener, Injector, Input, OnChanges, OnDestroy, Output, ViewContainerRef } from '@angular/core'\r\nimport { AlphaChannel, ColorMode, DialogDisplay, DialogPosition, OutputFormat } from '../util/types'\r\nimport { ColorPickerComponent } from './color-picker/color-picker.component'\r\n\r\n@Directive({\r\n    selector: '[cpColor]'\r\n})\r\nexport class ColorPickerDirective implements OnChanges, OnDestroy {\r\n\r\n    private dialog: ColorPickerComponent\r\n\r\n    private dialogCreated: boolean = false\r\n    private ignoreChanges: boolean = false\r\n\r\n    private cmpRef: ComponentRef<ColorPickerComponent>\r\n\r\n    private _cpColor: string\r\n\r\n    @Input() set cpColor(val: string) {\r\n        this._cpColor = val\r\n        if (this.dialog)\r\n            this.dialog.setColorFromString(val, false)\r\n    }\r\n\r\n    get cpColor() {\r\n        return this._cpColor\r\n    }\r\n\r\n    @Input() cpWidth: string = '230px'\r\n    @Input() cpHeight: string = 'auto'\r\n\r\n    @Input() cpToggle: boolean = false\r\n    @Input() cpDisabled: boolean = false\r\n\r\n    @Input() cpIgnoredElements: any = []\r\n\r\n    @Input() cpFallbackColor: string = ''\r\n\r\n    @Input() cpColorMode: ColorMode = 'color'\r\n\r\n    @Input() cpOutputFormat: OutputFormat = OutputFormat.auto\r\n    @Input() cpAlphaChannel: AlphaChannel = AlphaChannel.enabled\r\n\r\n    @Input() cpDisableInput: boolean = false\r\n\r\n    @Input() cpDialogDisplay: DialogDisplay = DialogDisplay.popup\r\n\r\n    @Input() cpSaveClickOutside: boolean = true\r\n    @Input() cpCloseClickOutside: boolean = true\r\n\r\n    @Input() cpUseRootViewContainer: boolean = false\r\n\r\n    @Input() cpPosition: DialogPosition = DialogPosition.right\r\n    @Input() cpPositionOffset: string = '0%'\r\n    @Input() cpPositionRelativeToArrow: boolean = false\r\n\r\n    @Input() cpOKButton: boolean = false\r\n    @Input() cpOKButtonText: string = 'OK'\r\n    @Input() cpOKButtonClass: string = 'cp-ok-button-class'\r\n\r\n    @Input() cpCancelButton: boolean = false\r\n    @Input() cpCancelButtonText: string = 'Cancel'\r\n    @Input() cpCancelButtonClass: string = 'cp-cancel-button-class'\r\n\r\n    @Input() cpPresetLabel: string = 'Preset colors'\r\n    @Input() cpPresetColors: string[]\r\n    @Input() cpMaxPresetColorsLength: number = 6\r\n\r\n    @Input() cpPresetEmptyMessage: string = 'No colors added'\r\n    @Input() cpPresetEmptyMessageClass: string = 'preset-empty-message'\r\n\r\n    @Input() cpAddColorButton: boolean = false\r\n    @Input() cpAddColorButtonText: string = 'Add color'\r\n\r\n    @Input() cpRemoveColorButtonClass: string = 'cp-remove-color-button-class'\r\n\r\n    @Output() cpInputChange = new EventEmitter<any>(true)\r\n\r\n    @Output() cpToggleChange = new EventEmitter<boolean>(true)\r\n\r\n    @Output() cpSliderChange = new EventEmitter<any>(true)\r\n    @Output() cpSliderDragEnd = new EventEmitter<string>(true)\r\n    @Output() cpSliderDragStart = new EventEmitter<string>(true)\r\n\r\n    @Output() cpOpen = new EventEmitter<string>(true)\r\n    @Output() cpClose = new EventEmitter<string>(true)\r\n\r\n    @Output() cpCancel = new EventEmitter<string>(true)\r\n    @Output() cpSelect = new EventEmitter<string>(true)\r\n    @Output() cpColorChange = new EventEmitter<string>(false)\r\n\r\n    @Output() cpPresetColorsChange = new EventEmitter<any>(true)\r\n\r\n    @HostListener('click') handleClick(): void {\r\n        this.inputFocus()\r\n    }\r\n\r\n    @HostListener('focus') handleFocus(): void {\r\n        this.inputFocus()\r\n    }\r\n\r\n    @HostListener('input', ['$event']) handleInput(event: any): void {\r\n        this.inputChange(event)\r\n    }\r\n\r\n    constructor(\r\n        private injector: Injector,\r\n        private cfr: ComponentFactoryResolver,\r\n        private appRef: ApplicationRef,\r\n        private vcRef: ViewContainerRef,\r\n        private elRef: ElementRef\r\n    ) { }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.cmpRef !== undefined) {\r\n            this.cmpRef.destroy()\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        if (changes.cpToggle && !this.cpDisabled) {\r\n            if (changes.cpToggle.currentValue) {\r\n                this.openDialog()\r\n            } else if (!changes.cpToggle.currentValue) {\r\n                this.closeDialog()\r\n            }\r\n        }\r\n\r\n        if (changes.colorPicker) {\r\n            if (this.dialog && !this.ignoreChanges) {\r\n                if (this.cpDialogDisplay == DialogDisplay.inline) {\r\n                    this.dialog.setInitialColor(changes.colorPicker.currentValue)\r\n                }\r\n\r\n                this.dialog.setColorFromString(changes.colorPicker.currentValue, false)\r\n\r\n                if (this.cpUseRootViewContainer && this.cpDialogDisplay != DialogDisplay.inline) {\r\n                    this.cmpRef.changeDetectorRef.detectChanges()\r\n                }\r\n            }\r\n\r\n            this.ignoreChanges = false\r\n        }\r\n\r\n        if (changes.cpPresetLabel || changes.cpPresetColors) {\r\n            if (this.dialog) {\r\n                this.dialog.setPresetConfig(this.cpPresetLabel, this.cpPresetColors)\r\n            }\r\n        }\r\n    }\r\n\r\n    public openDialog(): void {\r\n        if (!this.dialogCreated) {\r\n            let vcRef = this.vcRef\r\n\r\n            this.dialogCreated = true\r\n\r\n            if (this.cpUseRootViewContainer && this.cpDialogDisplay != DialogDisplay.inline) {\r\n                const classOfRootComponent = this.appRef.componentTypes[0]\r\n                const appInstance = this.injector.get(classOfRootComponent)\r\n\r\n                vcRef = appInstance.vcRef || appInstance.viewContainerRef || this.vcRef\r\n\r\n                if (vcRef === this.vcRef) {\r\n                    console.warn('You are using cpUseRootViewContainer, ' +\r\n                        'but the root component is not exposing viewContainerRef!' +\r\n                        'Please expose it by adding \\'public vcRef: ViewContainerRef\\' to the constructor.')\r\n                }\r\n            }\r\n\r\n            const compFactory = this.cfr.resolveComponentFactory(ColorPickerComponent)\r\n\r\n            this.cmpRef = vcRef.createComponent(compFactory, 0, this.injector, [])\r\n\r\n            this.cmpRef.instance.setupDialog(this, this.elRef, this.cpColor,\r\n                this.cpWidth, this.cpHeight, this.cpDialogDisplay, this.cpFallbackColor,\r\n                this.cpColorMode, this.cpAlphaChannel, this.cpOutputFormat, this.cpDisableInput,\r\n                this.cpIgnoredElements, this.cpSaveClickOutside, this.cpCloseClickOutside,\r\n                this.cpUseRootViewContainer, this.cpPosition, this.cpPositionOffset,\r\n                this.cpPositionRelativeToArrow, this.cpPresetLabel, this.cpPresetColors,\r\n                this.cpMaxPresetColorsLength, this.cpPresetEmptyMessage, this.cpPresetEmptyMessageClass,\r\n                this.cpOKButton, this.cpOKButtonClass, this.cpOKButtonText,\r\n                this.cpCancelButton, this.cpCancelButtonClass, this.cpCancelButtonText,\r\n                this.cpAddColorButton, this.cpAddColorButtonText,\r\n                this.cpRemoveColorButtonClass)\r\n\r\n            this.dialog = this.cmpRef.instance\r\n\r\n            if (this.vcRef !== vcRef) {\r\n                this.cmpRef.changeDetectorRef.detectChanges()\r\n            }\r\n        } else if (this.dialog) {\r\n            this.dialog.openDialog(this.cpColor)\r\n        }\r\n    }\r\n\r\n    public closeDialog(): void {\r\n        if (this.dialog && this.cpDialogDisplay == DialogDisplay.popup) {\r\n            this.dialog.closeDialog()\r\n        }\r\n    }\r\n\r\n    public stateChanged(state: boolean): void {\r\n        this.cpToggleChange.emit(state)\r\n\r\n        if (state) {\r\n            this.cpOpen.emit(this.cpColor)\r\n        } else {\r\n            this.cpClose.emit(this.cpColor)\r\n        }\r\n    }\r\n\r\n    public colorChanged(value: string, ignore: boolean = true): void {\r\n        this.ignoreChanges = ignore\r\n\r\n        this.cpColorChange.emit(value)\r\n    }\r\n\r\n    public colorCanceled(): void {\r\n        this.cpCancel.emit()\r\n    }\r\n\r\n    public colorSelected(value: string): void {\r\n        this.cpSelect.emit(value)\r\n    }\r\n\r\n    public inputFocus(): void {\r\n        const element = this.elRef.nativeElement\r\n\r\n        const ignored = this.cpIgnoredElements.filter((item: any) => item === element)\r\n\r\n        if (!this.cpDisabled && !ignored.length) {\r\n            if (typeof document !== 'undefined' && element === document.activeElement) {\r\n                this.openDialog()\r\n            } else if (!this.dialog || !this.dialog.show) {\r\n                this.openDialog()\r\n            } else {\r\n                this.closeDialog()\r\n            }\r\n        }\r\n    }\r\n\r\n    public inputChange(event: any): void {\r\n        if (this.dialog) {\r\n            this.dialog.setColorFromString(event.target.value, true)\r\n        } else {\r\n            this.cpColor = event.target.value\r\n\r\n            this.cpColorChange.emit(this.cpColor)\r\n        }\r\n    }\r\n\r\n    public inputChanged(event: any): void {\r\n        this.cpInputChange.emit(event)\r\n    }\r\n\r\n    public sliderChanged(event: any): void {\r\n        this.cpSliderChange.emit(event)\r\n    }\r\n\r\n    public sliderDragEnd(event: any): void {\r\n        this.cpSliderDragEnd.emit(event)\r\n    }\r\n\r\n    public sliderDragStart(event: any): void {\r\n        this.cpSliderDragStart.emit(event)\r\n    }\r\n\r\n    public presetColorsChanged(value: any[]): void {\r\n        this.cpPresetColorsChange.emit(value)\r\n    }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core'\r\n\r\n@Directive({\r\n    selector: '[cpSlider]'\r\n})\r\nexport class SliderDirective {\r\n    private listenerMove: any\r\n    private listenerStop: any\r\n\r\n    @Input() rgX: number\r\n    @Input() rgY: number\r\n\r\n    @Input() slider: string\r\n\r\n    @Output() dragEnd = new EventEmitter()\r\n    @Output() dragStart = new EventEmitter()\r\n\r\n    @Output() newValue = new EventEmitter<any>()\r\n\r\n    @HostListener('mousedown', ['$event']) mouseDown(event: any): void {\r\n        this.start(event)\r\n    }\r\n\r\n    @HostListener('touchstart', ['$event']) touchStart(event: any): void {\r\n        this.start(event)\r\n    }\r\n\r\n    constructor(private elRef: ElementRef) {\r\n        this.listenerMove = (event: any) => this.move(event)\r\n\r\n        this.listenerStop = () => this.stop()\r\n    }\r\n\r\n    private move(event: any): void {\r\n        event.preventDefault()\r\n\r\n        this.setCursor(event)\r\n    }\r\n\r\n    private start(event: any): void {\r\n        this.setCursor(event)\r\n\r\n        event.stopPropagation()\r\n\r\n        document.addEventListener('mouseup', this.listenerStop)\r\n        document.addEventListener('touchend', this.listenerStop)\r\n        document.addEventListener('mousemove', this.listenerMove)\r\n        document.addEventListener('touchmove', this.listenerMove)\r\n\r\n        this.dragStart.emit()\r\n    }\r\n\r\n    private stop(): void {\r\n        document.removeEventListener('mouseup', this.listenerStop)\r\n        document.removeEventListener('touchend', this.listenerStop)\r\n        document.removeEventListener('mousemove', this.listenerMove)\r\n        document.removeEventListener('touchmove', this.listenerMove)\r\n\r\n        this.dragEnd.emit()\r\n    }\r\n\r\n    private getX(event: any): number {\r\n        const position = this.elRef.nativeElement.getBoundingClientRect()\r\n\r\n        const pageX = (event.pageX !== undefined) ? event.pageX : event.touches[0].pageX\r\n\r\n        return pageX - position.left - window.pageXOffset\r\n    }\r\n\r\n    private getY(event: any): number {\r\n        const position = this.elRef.nativeElement.getBoundingClientRect()\r\n\r\n        const pageY = (event.pageY !== undefined) ? event.pageY : event.touches[0].pageY\r\n\r\n        return pageY - position.top - window.pageYOffset\r\n    }\r\n\r\n    private setCursor(event: any): void {\r\n        const width = this.elRef.nativeElement.offsetWidth\r\n        const height = this.elRef.nativeElement.offsetHeight\r\n\r\n        const x = Math.max(0, Math.min(this.getX(event), width))\r\n        const y = Math.max(0, Math.min(this.getY(event), height))\r\n\r\n        if (this.rgX !== undefined && this.rgY !== undefined) {\r\n            this.newValue.emit({ s: x / width, v: (1 - y / height), rgX: this.rgX, rgY: this.rgY })\r\n        } else if (this.rgX === undefined && this.rgY !== undefined) {\r\n            this.newValue.emit({ v: y / height, rgY: this.rgY })\r\n        } else if (this.rgX !== undefined && this.rgY === undefined) {\r\n            this.newValue.emit({ v: x / width, rgX: this.rgX })\r\n        }\r\n    }\r\n}\r\n","import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core'\r\n\r\n@Directive({\r\n    selector: '[cpText]'\r\n})\r\nexport class TextDirective {\r\n    @Input() rg: number\r\n    @Input() text: any\r\n\r\n    @Output() newValue = new EventEmitter<any>()\r\n\r\n    @HostListener('input', ['$event']) inputChange(event: any): void {\r\n        const value = event.target.value\r\n\r\n        if (this.rg === undefined) {\r\n            this.newValue.emit(value)\r\n        } else {\r\n            const numeric = parseFloat(value)\r\n\r\n            this.newValue.emit({ v: numeric, rg: this.rg })\r\n        }\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { ColorPickerDirective } from './color-picker.directive'\r\nimport { ColorPickerComponent } from './color-picker/color-picker.component'\r\nimport { SliderDirective } from './slider.directive'\r\nimport { TextDirective } from './text.directive'\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TextDirective,\r\n        SliderDirective,\r\n        ColorPickerComponent,\r\n        ColorPickerDirective\r\n    ],\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: [\r\n        ColorPickerComponent,\r\n        ColorPickerDirective\r\n    ],\r\n    entryComponents: [\r\n        ColorPickerComponent\r\n    ]\r\n})\r\nexport class ColorPickerModule { }\r\n"],"names":[],"mappings":"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"}
